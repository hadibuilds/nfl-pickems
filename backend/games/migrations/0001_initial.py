# Generated by Django 5.1.7 on 2025-08-28 21:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Window',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveSmallIntegerField(db_index=True)),
                ('date', models.DateField(db_index=True)),
                ('slot', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('late', 'Late')], db_index=True, max_length=10)),
                ('is_complete', models.BooleanField(db_index=True, default=False)),
                ('games_total', models.PositiveSmallIntegerField(default=0)),
                ('props_total', models.PositiveSmallIntegerField(default=0)),
                ('games_completed', models.PositiveSmallIntegerField(default=0)),
                ('props_completed', models.PositiveSmallIntegerField(default=0)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['season', 'date', 'slot'], name='ix_window_order'), models.Index(fields=['season', 'is_complete', 'date'], name='ix_window_complete')],
                'constraints': [models.UniqueConstraint(fields=('season', 'date', 'slot'), name='uq_window_season_date_slot')],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveSmallIntegerField(db_index=True)),
                ('week', models.PositiveSmallIntegerField(db_index=True)),
                ('home_team', models.CharField(db_index=True, max_length=50)),
                ('away_team', models.CharField(db_index=True, max_length=50)),
                ('start_time', models.DateTimeField(db_index=True)),
                ('locked', models.BooleanField(default=False)),
                ('winner', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('window', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='games', to='games.window')),
            ],
        ),
        migrations.CreateModel(
            name='PropBet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('over_under', 'Over/Under'), ('point_spread', 'Point Spread'), ('take_the_bait', 'Take-the-Bait')], db_index=True, max_length=20)),
                ('question', models.CharField(max_length=255)),
                ('options', models.JSONField(default=list)),
                ('correct_answer', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('season', models.PositiveSmallIntegerField(blank=True, db_index=True, null=True)),
                ('week', models.PositiveSmallIntegerField(blank=True, db_index=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prop_bets', to='games.game')),
            ],
            options={
                'indexes': [models.Index(fields=['game', 'category'], name='ix_propbet_game_cat')],
                'constraints': [models.UniqueConstraint(fields=('game', 'question'), name='uq_propbet_game_question')],
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['season', 'week', 'start_time'], name='ix_game_sched'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.UniqueConstraint(fields=('season', 'week', 'home_team', 'away_team'), name='uq_game_season_week_home_away'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.CheckConstraint(condition=models.Q(('home_team', models.F('away_team')), _negated=True), name='ck_game_home_neq_away'),
        ),
    ]
