# Generated by Django 5.1.7 on 2025-08-28 04:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('predictions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSeasonTotals',
            fields=[
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='+', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ml_points', models.IntegerField()),
                ('prop_points', models.IntegerField()),
                ('total_points', models.IntegerField()),
            ],
            options={
                'db_table': 'user_season_totals_mv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWindowCumulativeMV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('window_key', models.CharField(max_length=64)),
                ('window_seq', models.IntegerField()),
                ('cume_ml_after', models.IntegerField()),
                ('cume_prop_after', models.IntegerField()),
                ('cume_total_after', models.IntegerField()),
                ('rank_after', models.IntegerField()),
                ('rank_before', models.IntegerField(null=True)),
                ('rank_change', models.IntegerField()),
                ('trend', models.CharField(max_length=10)),
                ('display_trend', models.BooleanField()),
            ],
            options={
                'db_table': 'user_window_cume_mv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWindowDeltasMV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('window_key', models.CharField(max_length=64)),
                ('window_seq', models.IntegerField()),
                ('ml_points_delta', models.IntegerField()),
                ('prop_points_delta', models.IntegerField()),
                ('total_delta', models.IntegerField()),
            ],
            options={
                'db_table': 'user_window_deltas_mv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeaderboardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('snapshot_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-week'],
                'unique_together': {('week',)},
            },
        ),
        migrations.CreateModel(
            name='UserSeasonInsights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_week_points', models.IntegerField(default=0)),
                ('best_week_number', models.IntegerField(blank=True, null=True)),
                ('best_rank', models.IntegerField(blank=True, null=True)),
                ('best_rank_week', models.IntegerField(blank=True, null=True)),
                ('worst_rank', models.IntegerField(blank=True, null=True)),
                ('weeks_at_rank_1', models.IntegerField(default=0)),
                ('weeks_in_top_3', models.IntegerField(default=0)),
                ('weeks_in_top_5', models.IntegerField(default=0)),
                ('consecutive_weeks_at_1', models.IntegerField(default=0)),
                ('max_consecutive_weeks_at_1', models.IntegerField(default=0)),
                ('biggest_rank_climb', models.IntegerField(default=0)),
                ('biggest_rank_fall', models.IntegerField(default=0)),
                ('favorite_team_picked', models.CharField(blank=True, max_length=50)),
                ('favorite_team_pick_count', models.IntegerField(default=0)),
                ('best_category', models.CharField(choices=[('moneyline', 'Moneyline'), ('prop', 'Prop Bets'), ('balanced', 'Balanced')], default='balanced', max_length=20)),
                ('trending_direction', models.CharField(choices=[('up', 'Trending Up'), ('down', 'Trending Down'), ('stable', 'Stable')], default='stable', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Top3Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('window_key', models.CharField(db_index=True, max_length=128)),
                ('version', models.PositiveIntegerField()),
                ('payload', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('correction_applied', models.BooleanField(default=False)),
                ('correction_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='snapshots', to='predictions.correctionevent')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('window_key', 'version')},
            },
        ),
        migrations.CreateModel(
            name='UserStatHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField(editable=False)),
                ('rank', models.IntegerField(editable=False)),
                ('previous_rank', models.IntegerField(blank=True, editable=False, null=True)),
                ('rank_change', models.IntegerField(default=0, editable=False)),
                ('total_points', models.IntegerField(default=0, editable=False)),
                ('week_points', models.IntegerField(default=0, editable=False)),
                ('week_moneyline_correct', models.IntegerField(default=0, editable=False)),
                ('week_moneyline_total', models.IntegerField(default=0, editable=False)),
                ('week_prop_correct', models.IntegerField(default=0, editable=False)),
                ('week_prop_total', models.IntegerField(default=0, editable=False)),
                ('season_moneyline_correct', models.IntegerField(default=0, editable=False)),
                ('season_moneyline_total', models.IntegerField(default=0, editable=False)),
                ('season_prop_correct', models.IntegerField(default=0, editable=False)),
                ('season_prop_total', models.IntegerField(default=0, editable=False)),
                ('week_accuracy', models.FloatField(default=0.0, editable=False)),
                ('season_accuracy', models.FloatField(default=0.0, editable=False)),
                ('moneyline_accuracy', models.FloatField(default=0.0, editable=False)),
                ('prop_accuracy', models.FloatField(default=0.0, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Statistics History',
                'verbose_name_plural': 'User Statistics History',
                'ordering': ['week', 'rank'],
                'indexes': [models.Index(fields=['user', '-week'], name='analytics_u_user_id_667490_idx'), models.Index(fields=['week', 'rank'], name='analytics_u_week_6882eb_idx'), models.Index(fields=['-total_points'], name='analytics_u_total_p_4638d1_idx')],
                'unique_together': {('user', 'week')},
            },
        ),
        migrations.CreateModel(
            name='UserWindowCumulative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField(db_index=True)),
                ('window_key', models.CharField(db_index=True, max_length=64)),
                ('window_seq', models.IntegerField(db_index=True)),
                ('cume_ml_after', models.IntegerField(default=0)),
                ('cume_prop_after', models.IntegerField(default=0)),
                ('cume_total_after', models.IntegerField(default=0)),
                ('rank_after', models.IntegerField(db_index=True)),
                ('rank_before', models.IntegerField(blank=True, null=True)),
                ('rank_change', models.IntegerField(default=0)),
                ('trend', models.CharField(choices=[('up', 'Up'), ('down', 'Down'), ('same', 'Same')], default='same', max_length=10)),
                ('display_trend', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['season', 'window_seq', 'rank_after'],
                'indexes': [models.Index(fields=['season', 'window_seq', 'rank_after'], name='analytics_u_season_026964_idx'), models.Index(fields=['user', 'season', 'window_seq'], name='analytics_u_user_id_51324d_idx'), models.Index(fields=['window_key', 'rank_after'], name='analytics_u_window__8dc6c6_idx')],
                'unique_together': {('user', 'season', 'window_key')},
            },
        ),
        migrations.CreateModel(
            name='UserWindowDeltas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField(db_index=True)),
                ('window_key', models.CharField(db_index=True, max_length=64)),
                ('ml_points_delta', models.IntegerField(default=0)),
                ('prop_points_delta', models.IntegerField(default=0)),
                ('total_delta', models.IntegerField(default=0)),
                ('window_seq', models.IntegerField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['season', 'window_seq', 'user'],
                'indexes': [models.Index(fields=['season', 'window_seq'], name='analytics_u_season_030fb8_idx'), models.Index(fields=['user', 'season'], name='analytics_u_user_id_a2a8b7_idx'), models.Index(fields=['window_key'], name='analytics_u_window__e66816_idx')],
                'unique_together': {('user', 'season', 'window_key')},
            },
        ),
    ]
