# Generated by Django 5.1.7 on 2025-08-25 07:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('games', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaderboardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('snapshot_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('week',)},
            },
        ),
        migrations.CreateModel(
            name='PropBet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('over_under', 'Over/Under'), ('point_spread', 'Point Spread'), ('take_the_bait', 'Take-the-Bait')], max_length=20)),
                ('question', models.CharField(max_length=255)),
                ('options', models.JSONField(default=list)),
                ('correct_answer', models.CharField(blank=True, max_length=50, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prop_bets', to='games.game')),
            ],
        ),
        migrations.CreateModel(
            name='SeasonStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_week_points', models.IntegerField(default=0)),
                ('best_week_number', models.IntegerField(blank=True, null=True)),
                ('best_rank', models.IntegerField(blank=True, null=True)),
                ('best_rank_week', models.IntegerField(blank=True, null=True)),
                ('worst_rank', models.IntegerField(blank=True, null=True)),
                ('weeks_at_rank_1', models.IntegerField(default=0)),
                ('weeks_in_top_3', models.IntegerField(default=0)),
                ('weeks_in_top_5', models.IntegerField(default=0)),
                ('consecutive_weeks_at_1', models.IntegerField(default=0)),
                ('max_consecutive_weeks_at_1', models.IntegerField(default=0)),
                ('biggest_rank_climb', models.IntegerField(default=0)),
                ('biggest_rank_fall', models.IntegerField(default=0)),
                ('favorite_team_picked', models.CharField(blank=True, max_length=50)),
                ('favorite_team_pick_count', models.IntegerField(default=0)),
                ('best_category', models.CharField(choices=[('moneyline', 'Moneyline'), ('prop', 'Prop Bets'), ('balanced', 'Balanced')], default='balanced', max_length=20)),
                ('trending_direction', models.CharField(choices=[('up', 'Trending Up'), ('down', 'Trending Down'), ('stable', 'Stable')], default='stable', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStatHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField(editable=False)),
                ('rank', models.IntegerField(editable=False)),
                ('previous_rank', models.IntegerField(blank=True, editable=False, null=True)),
                ('rank_change', models.IntegerField(default=0, editable=False)),
                ('total_points', models.IntegerField(default=0, editable=False)),
                ('week_points', models.IntegerField(default=0, editable=False)),
                ('week_moneyline_correct', models.IntegerField(default=0, editable=False)),
                ('week_moneyline_total', models.IntegerField(default=0, editable=False)),
                ('week_prop_correct', models.IntegerField(default=0, editable=False)),
                ('week_prop_total', models.IntegerField(default=0, editable=False)),
                ('season_moneyline_correct', models.IntegerField(default=0, editable=False)),
                ('season_moneyline_total', models.IntegerField(default=0, editable=False)),
                ('season_prop_correct', models.IntegerField(default=0, editable=False)),
                ('season_prop_total', models.IntegerField(default=0, editable=False)),
                ('week_accuracy', models.FloatField(default=0.0, editable=False)),
                ('season_accuracy', models.FloatField(default=0.0, editable=False)),
                ('moneyline_accuracy', models.FloatField(default=0.0, editable=False)),
                ('prop_accuracy', models.FloatField(default=0.0, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Statistics History',
                'verbose_name_plural': 'User Statistics History',
                'ordering': ['week', 'rank'],
            },
        ),
        migrations.CreateModel(
            name='RankHistory',
            fields=[
            ],
            options={
                'verbose_name': 'Rank History (Deprecated)',
                'verbose_name_plural': 'Rank History (Deprecated)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('predictions.userstathistory',),
        ),
        migrations.CreateModel(
            name='WeeklySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('weekly_points', models.IntegerField(default=0)),
                ('weekly_game_correct', models.IntegerField(default=0)),
                ('weekly_game_total', models.IntegerField(default=0)),
                ('weekly_prop_correct', models.IntegerField(default=0)),
                ('weekly_prop_total', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('total_game_correct', models.IntegerField(default=0)),
                ('total_game_total', models.IntegerField(default=0)),
                ('total_prop_correct', models.IntegerField(default=0)),
                ('total_prop_total', models.IntegerField(default=0)),
                ('rank', models.IntegerField()),
                ('total_users', models.IntegerField()),
                ('points_from_leader', models.IntegerField(default=0)),
                ('weekly_accuracy', models.FloatField(blank=True, null=True)),
                ('overall_accuracy', models.FloatField(blank=True, null=True)),
                ('moneyline_accuracy', models.FloatField(blank=True, null=True)),
                ('prop_accuracy', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['week', 'rank'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_winner', models.CharField(default='N/A', max_length=50)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Money-line prediction',
                'verbose_name_plural': 'Money-line predictions',
                'indexes': [models.Index(fields=['user', 'is_correct'], name='predictions_user_id_a4a061_idx'), models.Index(fields=['game', 'is_correct'], name='predictions_game_id_b73434_idx')],
                'unique_together': {('user', 'game')},
            },
        ),
        migrations.CreateModel(
            name='PropBetPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=50)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('prop_bet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.propbet')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'is_correct'], name='predictions_user_id_4edf8f_idx'), models.Index(fields=['prop_bet', 'is_correct'], name='predictions_prop_be_d649d4_idx')],
                'unique_together': {('user', 'prop_bet')},
            },
        ),
        migrations.AddIndex(
            model_name='userstathistory',
            index=models.Index(fields=['user', '-week'], name='predictions_user_id_7e849c_idx'),
        ),
        migrations.AddIndex(
            model_name='userstathistory',
            index=models.Index(fields=['week', 'rank'], name='predictions_week_4c579d_idx'),
        ),
        migrations.AddIndex(
            model_name='userstathistory',
            index=models.Index(fields=['-total_points'], name='predictions_total_p_82571d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userstathistory',
            unique_together={('user', 'week')},
        ),
        migrations.AlterUniqueTogether(
            name='weeklysnapshot',
            unique_together={('user', 'week')},
        ),
    ]
